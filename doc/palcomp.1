.TH palcomp 1 "2022-10-23" "hxtools" "hxtools"
.SH Name
palcomp \(em palette composer
.SH Syntax
\fBpalcomp\fP [commands...]
.SH Description
palcomp can be used to generate palettes for terminals. The most important
realization is that programs running within a terminal and which use
console_codes(4) to set colors rely on the \fBcontrast\fP of the colors
produced by a color pairing to be proportional to the contrast those two codes
have when using the VGA color palette. For this reason, a mainstay of this
program is to operate using a colorspace with perceptual uniformity, i.e.
CIELAB/LCh.
.SH Commands
.SS b0
Set color 0 to actual black.
.SS bg
Emit a \-bg parameter upon xterm, and use color 0.
.SS ct
Print the 16-color table.
.SS ct256
Print 256-color cubes and tables.
.SS cxl
Print a contrast analysis of the palette based on brightness differences.
.SS cxa
Print a contrast analysis of the palette based on Myndex Advanced Perceptual
Contrast Algorithm (APCA W3). This is useful because even if two colors have
the same/a similar brightness in the LCh colorspace, it is possible for
(sufficiently capable) humans to distinguish such two colors.
.SS eq[=b]
Equalize (equal-space) the lightness values of the palette's colors. The b
parameter (0 <= b <= 100) specifies the mandatory lightness difference from the
darkest to 2nd darkest color. In practice, b specifies the lightness value that
blue is to be assigned. If b is absent, uses b=1/16.
.SS fg
Emit a \-fg parameter upon xterm, and use color 7.
.SS hueadd=h
Rotate colors using LCh space. (0 <= h < 360)
.SS hueset=h
Set the hue of all colors using LCh space.
.SS inv16
Perform color inversion the way Norton Icon Editor did it.
.SS lch
Emit the LCh form of the palette to stdout (no particular formatting).
.SS litadd=r
Change colors' brightness using LCh space.
.SS litmul=r
Multiply colors' brightness using LCh space.
.SS litset=r
Set colors' brightness using LCh space.
.SS loadpal=
Load RGB palette from a file. xfce4-terminal *.theme files and termux
*.properties files are understood.
.SS satadd=r
Change colors' saturation using LCh space.
.SS satmul=r
Multiply colors' saturation using LCh space. In effect, with r<1, this causes a
desaturation of colors; r=0 leads to gray.
.SS satset=r
Set colors' saturation using LCh space.
.SS hsltint=h,s,l
Map the (LCh) brightnesses onto a color line through the HSL cylinder that goes
from black to the chosen color. Parameter ranges are (0 <= h < 360; 0 <= s < 1;
0 <= l <= 1). When using s<=0.5, this produces a black-to-{color} ramp; when
using s==1, this produces a black-to-{color}-to-white ramp.
.PP
hsltint produces a somewhat more contrasty result than manipulating hue and
saturation in LCh. Compare:
.IP \(bu 4
palcomp vgs satset=100 hueset=120 emit
.IP \(bu 4
palcomp vgs hsltint=90,1,0.5 emit
.SS hsltint=#rrggbb[,l]
A different syntax for the hsltint operation. First, the RGB value for the tint
color is converted to HSL. The so-computed L value can be overridden with the
optional \fB,\fP\fIl\fP suffix. Afterwards, behaves like hsltint=h,s,l.
.SS lchtint=h,s,l
.SS lchtint=#rrggbb[,l]
Replace the LCh hue and saturation by the base color given in HSL or RGB. The
LCh L value is retained as-is.
.SS loeq[=b[,g]]
Equalize (equal-space) the lightness values of the palette's low-intensity
colors plus darkgray. The b parameter (0 <= b <= g <= 100) specifies the
mandatory lightness difference from the darkest to 2nd darkest color. In
practice, b specifies the lightness value that blue is to be assigned.
The g parameter (b <= g <= 100) specifies the lightness that the brightest
color of the low-intensity section is to use (in practice, the lightness
for grey). If g is absent, defaults to
g=88.88; this is so that gray is still a little less intense than white. If b
is absent, uses b=11.11.
.SS vga
Loads the standard VGA palette.
.SS vgs
Loads a full-saturated VGA palette.
.SS win
Loads the standard Windows palette.
.SS xfce
Emit the palette as a line for an xfce4-terminal theme file.
.SS xterm
Emit the palette as xterm command line options. Use e.g. `xterm $(palcomp
vga hueset=120 xterm)` to utilize.
.SH Examples
.PP
Amber tint via LCh color space:
.IP \(bu 4
palcomp vgs lchtint=#95ef1d b0 emit
.PP
Black-to-green ramp (tint via HSL color space):
.IP \(bu 4
palcomp vgs hsltint=120,1,0.5 emit
.IP \(bu 4
palcomp vgs hsltint=#00ff00 emit
.PP
Black-to-green-white ramp (tint via HSL color space):
.IP \(bu 4
palcomp vgs hsltint=120,1,1 emit
.IP \(bu 4
palcomp vgs hsltint=#00ff00,1 emit
.SH Caveats
Lightness in LCh space behaves a bit counterintuitive. When (saturation) c>0,
then L=0 does not mean black, e.g.:
.nf
$ palcomp vgs lchtint=#0000ff stat
{\-0.000000,131.208094,301.364692}
...
ColorPalette=#0000a9;...
.fi
.PP
As a consequence, one needs to manipulate (shift and stretch) the L channel
values more after lchtint, for example by using litadd and litmul commands:
.IP \(bu 4
palcomp vgs lchtint=#0000ff litadd=\-42 litmul=1.74 lch xfce
.IP \(bu 4
palcomp vgs lchtint=#0080ff litadd=\-25 litmul=1.49 lch xfce
.PP
Stretching the brightness this way has the side-effect that all colors get a
bit darker, which may be undesirable. Instead of combining a tint with litadd
and litmul, I can recommend to force color 0 to black using the b0 command.
.SH See also
\fBhxtools\fP(7)
