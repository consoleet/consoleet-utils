.TH palcomp 1 "2022-10-23" "hxtools" "hxtools"
.SH Name
palcomp \(em palette composer
.SH Syntax
\fBpalcomp\fP [\fB\-v\fP] [commands...]
.SH Description
palcomp can be used to generate palettes for terminals. The most important
realization is that programs running within a terminal and which use
console_codes(4) to set colors rely on the \fBcontrast\fP of the colors
produced by a color pairing to be proportional to the contrast those two codes
have when using the VGA color palette. For this reason, a mainstay of this
program is to operate using a colorspace with perceptual uniformity, i.e.
CIELAB/LCh.
.PP
Most commands operate on a single palette, but it is possible to store multiple
palettes in memory. The current working palette is called "0" (cf.
loadreg/savereg). Each palette is kept in multiple colorspaces (currently sRGB
and LCh), so as to avoid e.g. RGB-to-LCh-to-RGB conversion round-trips when
modifying the lightness.
.SH Options
.TP
\fB\-v\fP
Generate debugging output.
.SH Commands
.SS b0
Set color 0 to actual black.
.SS bg
Emit a \-bg parameter upon xterm, and use color 0.
.SS blend=pct,name
RGB-blend the current palette with another; performs `output :=
curpal*(100-pct) + secondpal*pct`. pct should be in the range 0..100.
.SS ct
Print the 16-color table.
.SS ct256
Print 256-color cubes and tables.
.SS cxl
Print a contrast analysis of the palette based on brightness differences.
.SS cxa
Print a contrast analysis of the palette based on Myndex Advanced Perceptual
Contrast Algorithm (APCA W3). Be aware of the Helmholtz\(enKohlrausch effect,
where certain highly saturated colors appear brighter than their measured
luminance would imply; in other words, a color pair might appear more legible
than the computed contrast value indicates.
.SS eq[=b]
Equalize (equal-space) the lightness values of the palette's colors. The b
parameter (0 <= b <= 100) specifies the mandatory lightness difference from the
darkest to 2nd darkest color. In practice, b specifies the lightness value that
blue is to be assigned. If b is absent, uses b=1/16.
.SS eval=expr
Evaluate an (almost) arbitrary expression for every palette entry. The
identifiers \fBr\fP, \fBg\fP and \fBb\fP refer to RGB components of the palette
entry. The identifiers \fBl\fP, \fBc\fP and \fBh\fP refer to LCh components of
the palette entry. \fBx\fP, \fBy\fP and \fBz\fP refer to temporaries free for
use. Known operators are \fB+\fP, \fB\-\fP, \fB*\fP, \fB/\fP, \fB^\fP
(exponentiation), \fB,\fP (comma operator) and \fB=\fP. Grouping with
\fB(\fP...\fP)\fP is recognized.
.PP
As a shorthand, if \fIexpr\fP begins with an opening parenthesis or a
one-letter identifier followed by =, the expression can also be used as a
command without the need to type \fBeval=\fP.
.SS fg
Emit a \-fg parameter upon xterm, and use color 7.
.SS hsltint=h,s,l
Map the (LCh) brightnesses onto a color line through the HSL cylinder that goes
from black to the chosen color. Parameter ranges are (0 <= h < 360; 0 <= s < 1;
0 <= l <= 1). When using s<=0.5, this produces a black-to-{color} ramp; when
using s==1, this produces a black-to-{color}-to-white ramp.
.PP
hsltint produces a somewhat more contrasty result than manipulating hue (h) and
saturation/chromaticity (c) in LCh. Compare:
.IP \(bu 4
palcomp vgs c=100 h=120 emit
.IP \(bu 4
palcomp vgs hsltint=90,1,0.5 emit
.SS hsltint=#rrggbb[,l]
A different syntax for the hsltint operation. First, the RGB value for the tint
color is converted to HSL. The so-computed L value can be overridden with the
optional \fB,\fP\fIl\fP suffix. Afterwards, behaves like hsltint=h,s,l.
.SS ild=t
Set the white point to be a series D illuminant at color temperature t. (t
should be in the range 4000..25000 K). This only has an effect for the "cxa"
command. (Commands like hue/lightness modification all use libbabl, which
hardcodes D65.) The default white point used by palcomp is ild=6500. Note that
D65 is not exactly 6500 K, due to changes of the Planck constant between when
Illuminant D was first defined and 2019.
.SS inv16
Perform color inversion the way Norton Icon Editor did it.
.SS lch
Emit the LCh form of the palette to stdout (no particular formatting).
.SS lchtint=h,s,l
.SS lchtint=#rrggbb[,l]
Replace the LCh hue and saturation by the base color given in HSL or RGB. The
LCh L value is retained as-is.
.SS loadpal=
Load RGB palette from a file. xfce4-terminal *.theme files and termux
*.properties files are understood.
.SS loadreg=name
Set the working palette ("0") to the contents of the named palette.
.SS loeq[=b[,g]]
Equalize (equal-space) the lightness values of the palette's low-intensity
colors plus darkgray. The b parameter (0 <= b <= g <= 100) specifies the
mandatory lightness difference from the darkest to 2nd darkest color. In
practice, b specifies the lightness value that blue is to be assigned.
The g parameter (b <= g <= 100) specifies the lightness that the brightest
color of the low-intensity section is to use (in practice, the lightness
for grey). If g is absent, defaults to
g=88.88; this is so that gray is still a little less intense than white. If b
is absent, uses b=11.11.
.SS savereg=name
Save the current working palette ("0") to a new name.
.SS syncfromlch
.SS syncfromrgb
Explicitly synchronize palette representations. This can be used to experiment
with value clippings (e.g. `palcomp vgs 'l=l*2' syncfromrgb 'l=l/2'`; the
result of l*2 normally cannot be represented in RGB and causes clipping).
.SS vga
Loads the standard VGA palette.
.SS vgs
Loads a full-saturated VGA palette.
.SS win
Loads the standard Windows palette.
.SS xfce
Emit the palette as a line for an xfce4-terminal theme file.
.SS xterm
Emit the palette as xterm command line options. Use e.g. `xterm $(palcomp
vga h=120 xterm)` to utilize.
.SH Examples
.PP
Amber tint via LCh color space:
.IP \(bu 4
palcomp vgs lchtint=#ef951d fg b0 emit
.PP
Black-to-green ramp (tint via HSL color space):
.IP \(bu 4
palcomp vgs hsltint=120,1,0.5 emit
.IP \(bu 4
palcomp vgs hsltint=#00ff00 emit
.PP
Black-to-green-white ramp (tint via HSL color space):
.IP \(bu 4
palcomp vgs hsltint=120,1,1 emit
.IP \(bu 4
palcomp vgs hsltint=#00ff00,1 emit
.PP
Transmissive LCD effect, e.g. full command:
.IP \(bu 4
xterm $(palcomp vgs hsltint='#afc759' fg xterm) -bg '#102e2c'
.PP
Reflective LCD effect:
.IP \(bu 4
xterm $(palcomp vgs c=0 l=l/2 xterm) -bg '#8fa99e' -fg '#0a091b'
.SH Caveats
Lightness in LCh space behaves a bit counterintuitive. When (saturation) c>0,
then L=0 does not mean black, e.g.:
.nf
$ palcomp vgs lchtint=#0000ff stat
{\-0.000000,131.208094,301.364692}
...
ColorPalette=#0000a9;...
.fi
.PP
As a consequence, one needs to manipulate (shift and stretch) the L channel
values more after lchtint, for example by using lightness
addition/multiplication manipulations:
.IP \(bu 4
palcomp vgs lchtint=#0000ff 'l=(l\-42)*1.74' lch xfce
.IP \(bu 4
palcomp vgs lchtint=#0080ff 'l=(l\-25)*1.49' lch xfce
.PP
Stretching the brightness this way has the side-effect that all colors get a
bit darker, which may be undesirable. Instead of combining a tint with
lightness manipulation, I can recommend to force color 0 to black using the b0
command.
.SH See also
\fBhxtools\fP(7)
